{"version":3,"sources":["../src/constants/index.ts","../src/utils/index.ts"],"names":[],"mappings":"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","file":"index.cjs","sourcesContent":["// 默认配置常量\nexport const DEFAULT_WINDOW = typeof window !== 'undefined' ? window : undefined;\nexport const DEFAULT_DOCUMENT = typeof document !== 'undefined' ? document : undefined;\nexport const DEFAULT_NAVIGATOR = typeof navigator !== 'undefined' ? navigator : undefined;\nexport const DEFAULT_LOCATION = typeof location !== 'undefined' ? location : undefined;\n\n// 存储相关常量\nexport const STORAGE_KEY_PREFIX = 'reactuse:';\n\n// 事件名称常量\nexport const EVENTS = {\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  CLICK: 'click',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  MOUSEMOVE: 'mousemove',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n  FOCUS: 'focus',\n  BLUR: 'blur',\n  VISIBILITYCHANGE: 'visibilitychange',\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n  STORAGE: 'storage',\n  POPSTATE: 'popstate',\n  HASHCHANGE: 'hashchange',\n} as const;\n\n// 媒体查询断点\nexport const BREAKPOINTS = {\n  xs: 0,\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  '2xl': 1536,\n} as const;\n\n// 颜色模式\nexport const COLOR_MODES = {\n  LIGHT: 'light',\n  DARK: 'dark',\n  AUTO: 'auto',\n} as const;\n\n// 方向常量\nexport const DIRECTIONS = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  UP: 'up',\n  DOWN: 'down',\n  NONE: 'none',\n} as const;\n\n// 默认序列化器\nexport const DEFAULT_SERIALIZERS = {\n  boolean: {\n    read: (v: string) => v === 'true',\n    write: (v: boolean) => String(v),\n  },\n  object: {\n    read: (v: string) => {\n      try {\n        return JSON.parse(v);\n      } catch {\n        return null;\n      }\n    },\n    write: (v: any) => JSON.stringify(v),\n  },\n  number: {\n    read: (v: string) => {\n      const num = Number(v);\n      return Number.isNaN(num) ? null : num;\n    },\n    write: (v: number) => String(v),\n  },\n  string: {\n    read: (v: string) => v,\n    write: (v: string) => v,\n  },\n  any: {\n    read: (v: string) => {\n      try {\n        return JSON.parse(v);\n      } catch {\n        return v;\n      }\n    },\n    write: (v: any) => {\n      if (typeof v === 'string') return v;\n      try {\n        return JSON.stringify(v);\n      } catch {\n        return String(v);\n      }\n    },\n  },\n} as const;\n\n// 默认防抖延迟\nexport const DEFAULT_DEBOUNCE_MS = 300;\n\n// 默认节流延迟\nexport const DEFAULT_THROTTLE_MS = 100;\n\n// 默认超时时间\nexport const DEFAULT_TIMEOUT_MS = 5000;\n\n// 网络类型\nexport const NETWORK_TYPES = {\n  BLUETOOTH: 'bluetooth',\n  CELLULAR: 'cellular',\n  ETHERNET: 'ethernet',\n  NONE: 'none',\n  WIFI: 'wifi',\n  WIMAX: 'wimax',\n  OTHER: 'other',\n  UNKNOWN: 'unknown',\n} as const;\n\n// 有效连接类型\nexport const EFFECTIVE_TYPES = {\n  SLOW_2G: 'slow-2g',\n  '2G': '2g',\n  '3G': '3g',\n  '4G': '4g',\n} as const;","import type { MaybeRefOrGetter, ElementTarget } from '../types';\n\n// 判断是否为浏览器环境\nexport const isClient = typeof window !== 'undefined';\n\n// 判断是否为开发环境\nexport const isDev = (() => {\n  try {\n    return typeof process !== 'undefined' && process.env?.NODE_ENV === 'development';\n  } catch {\n    return false;\n  }\n})();\n\n// 空函数\nexport const noop = () => {};\n\n// 获取值的工具函数\nexport function toValue<T>(val: MaybeRefOrGetter<T>): T {\n  return typeof val === 'function'\n    ? (val as any)()\n    : val && typeof val === 'object' && 'current' in val\n    ? val.current\n    : val;\n}\n\n// 获取元素的工具函数\nexport function unrefElement<T extends Element>(\n  elRef: ElementTarget\n): T | undefined {\n  const plain = toValue(elRef);\n  return (plain as T) || undefined;\n}\n\n// 类型守卫\nexport function isRef<T>(val: any): val is { current: T } {\n  return val && typeof val === 'object' && 'current' in val;\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === 'function';\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val: any): val is number {\n  return typeof val === 'number';\n}\n\nexport function isBoolean(val: any): val is boolean {\n  return typeof val === 'boolean';\n}\n\nexport function isObject(val: any): val is Record<string, any> {\n  return val !== null && typeof val === 'object';\n}\n\nexport function isArray(val: any): val is any[] {\n  return Array.isArray(val);\n}\n\nexport function isDefined<T>(val: T | undefined | null): val is T {\n  return val !== undefined && val !== null;\n}\n\n// 深度克隆\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') return obj;\n  if (obj instanceof Date) return new Date(obj.getTime()) as T;\n  if (obj instanceof Array) return obj.map(item => deepClone(item)) as T;\n  if (typeof obj === 'object') {\n    const clonedObj = {} as T;\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        clonedObj[key] = deepClone(obj[key]);\n      }\n    }\n    return clonedObj;\n  }\n  return obj;\n}\n\n// 防抖函数\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): T & { cancel: () => void } {\n  let timeoutId: ReturnType<typeof setTimeout> | null = null;\n  \n  const debounced = ((...args: Parameters<T>) => {\n    if (timeoutId) clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), delay);\n  }) as T & { cancel: () => void };\n  \n  debounced.cancel = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  };\n  \n  return debounced;\n}\n\n// 节流函数\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): T & { cancel: () => void } {\n  let lastCall = 0;\n  let timeoutId: ReturnType<typeof setTimeout> | null = null;\n  \n  const throttled = ((...args: Parameters<T>) => {\n    const now = Date.now();\n    \n    if (now - lastCall >= delay) {\n      lastCall = now;\n      fn(...args);\n    } else if (!timeoutId) {\n      timeoutId = setTimeout(() => {\n        lastCall = Date.now();\n        timeoutId = null;\n        fn(...args);\n      }, delay - (now - lastCall));\n    }\n  }) as T & { cancel: () => void };\n  \n  throttled.cancel = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  };\n  \n  return throttled;\n}\n\n// 生成唯一 ID\nexport function generateId(prefix = 'id'): string {\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// 获取对象的类型字符串\nexport function getType(obj: any): string {\n  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\n\n// 合并对象\nexport function merge<T extends Record<string, any>>(\n  target: T,\n  ...sources: Partial<T>[]\n): T {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  \n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        merge(target[key], source[key] as any);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n  \n  return merge(target, ...sources);\n}\n\n// 获取嵌套对象的值\nexport function get(obj: any, path: string, defaultValue?: any): any {\n  const keys = path.split('.');\n  let result = obj;\n  \n  for (const key of keys) {\n    if (result == null || typeof result !== 'object') {\n      return defaultValue;\n    }\n    result = result[key];\n  }\n  \n  return result !== undefined ? result : defaultValue;\n}\n\n// 设置嵌套对象的值\nexport function set(obj: any, path: string, value: any): void {\n  const keys = path.split('.');\n  let current = obj;\n  \n  for (let i = 0; i < keys.length - 1; i++) {\n    const key = keys[i]!;\n    if (!(key in current) || !isObject(current[key])) {\n      current[key] = {};\n    }\n    current = current[key];\n  }\n  \n  const lastKey = keys[keys.length - 1]!;\n  current[lastKey] = value;\n}\n\n// 数组去重\nexport function unique<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr));\n}\n\n// 数组分块\nexport function chunk<T>(arr: T[], size: number): T[][] {\n  const chunks: T[][] = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size));\n  }\n  return chunks;\n}\n\n// 延迟执行\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// 重试函数\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  times: number = 3,\n  delay: number = 1000\n): Promise<T> {\n  try {\n    return await fn();\n  } catch (error) {\n    if (times <= 1) throw error;\n    await sleep(delay);\n    return retry(fn, times - 1, delay);\n  }\n}\n\n// 格式化字节大小\nexport function formatBytes(bytes: number, decimals: number = 2): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n// 创建事件发射器\nexport function createEventEmitter<T extends Record<string, any[]>>() {\n  const listeners: { [K in keyof T]?: Array<(...args: T[K]) => void> } = {};\n  \n  return {\n    on<K extends keyof T>(event: K, listener: (...args: T[K]) => void) {\n      if (!listeners[event]) listeners[event] = [];\n      listeners[event]!.push(listener);\n      \n      return () => {\n        const index = listeners[event]!.indexOf(listener);\n        if (index > -1) listeners[event]!.splice(index, 1);\n      };\n    },\n    \n    emit<K extends keyof T>(event: K, ...args: T[K]) {\n      if (listeners[event]) {\n        listeners[event]!.forEach(listener => listener(...args));\n      }\n    },\n    \n    off<K extends keyof T>(event: K, listener?: (...args: T[K]) => void) {\n      if (!listeners[event]) return;\n      \n      if (listener) {\n        const index = listeners[event]!.indexOf(listener);\n        if (index > -1) listeners[event]!.splice(index, 1);\n      } else {\n        listeners[event] = [];\n      }\n    },\n    \n    clear() {\n      Object.keys(listeners).forEach(key => {\n        listeners[key as keyof T] = [];\n      });\n    },\n  };\n}"]}